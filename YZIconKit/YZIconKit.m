//
//  YZIconKit.m
//  Yichi Zhang
//
//  Created by Yichi Zhang on 11/10/2014.
//  Copyright (c) 2014 Yichi Zhang. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "YZIconKit.h"


@implementation YZIconKit

#pragma mark Cache

static UIImage* _imageOfPeople = nil;
static UIImage* _imageOfCamera = nil;
static UIImage* _imageOfInfo = nil;

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawPeople;
{
    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];

    //// Group
    {
        //// Oval Drawing
        UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(11.5, 18.5, 5, 7)];
        [color setFill];
        [ovalPath fill];
        [UIColor.blackColor setStroke];
        ovalPath.lineWidth = 1;
        [ovalPath stroke];


        //// Oval 2 Drawing
        UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(24.5, 12.5, 11, 13)];
        [color setFill];
        [oval2Path fill];
        [color setStroke];
        oval2Path.lineWidth = 1;
        [oval2Path stroke];


        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(20.4, 30.79)];
        [bezierPath addLineToPoint: CGPointMake(20.4, 31.93)];
        [bezierPath addLineToPoint: CGPointMake(7.5, 31.93)];
        [bezierPath addLineToPoint: CGPointMake(7.5, 30.79)];
        [bezierPath addCurveToPoint: CGPointMake(12.19, 26.21) controlPoint1: CGPointMake(7.5, 28.26) controlPoint2: CGPointMake(9.6, 26.21)];
        [bezierPath addLineToPoint: CGPointMake(15.71, 26.21)];
        [bezierPath addCurveToPoint: CGPointMake(20.4, 30.79) controlPoint1: CGPointMake(18.3, 26.21) controlPoint2: CGPointMake(20.4, 28.26)];
        [bezierPath closePath];
        [color setFill];
        [bezierPath fill];
        [color setStroke];
        bezierPath.lineWidth = 1;
        [bezierPath stroke];


        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(41.5, 34.67)];
        [bezier2Path addLineToPoint: CGPointMake(41.5, 36.5)];
        [bezier2Path addLineToPoint: CGPointMake(18.05, 36.5)];
        [bezier2Path addLineToPoint: CGPointMake(18.05, 34.67)];
        [bezier2Path addCurveToPoint: CGPointMake(26.58, 27.36) controlPoint1: CGPointMake(18.05, 30.63) controlPoint2: CGPointMake(21.87, 27.36)];
        [bezier2Path addLineToPoint: CGPointMake(32.97, 27.36)];
        [bezier2Path addCurveToPoint: CGPointMake(41.5, 34.67) controlPoint1: CGPointMake(37.68, 27.36) controlPoint2: CGPointMake(41.5, 30.63)];
        [bezier2Path closePath];
        [color setFill];
        [bezier2Path fill];
        [color setStroke];
        bezier2Path.lineWidth = 1;
        [bezier2Path stroke];
    }
}

+ (void)drawCamera;
{
    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];

    //// Group
    {
        //// Rectangle Drawing
        UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(19.5, 14.5, 12, 4) byRoundingCorners: UIRectCornerTopLeft | UIRectCornerTopRight cornerRadii: CGSizeMake(2, 2)];
        [rectanglePath closePath];
        [color setFill];
        [rectanglePath fill];
        [color setStroke];
        rectanglePath.lineWidth = 1;
        [rectanglePath stroke];


        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(20.9, 21.9)];
        [bezierPath addCurveToPoint: CGPointMake(20.9, 31.1) controlPoint1: CGPointMake(18.37, 24.44) controlPoint2: CGPointMake(18.37, 28.56)];
        [bezierPath addCurveToPoint: CGPointMake(30.1, 31.1) controlPoint1: CGPointMake(23.44, 33.63) controlPoint2: CGPointMake(27.56, 33.63)];
        [bezierPath addCurveToPoint: CGPointMake(30.1, 21.9) controlPoint1: CGPointMake(32.63, 28.56) controlPoint2: CGPointMake(32.63, 24.44)];
        [bezierPath addCurveToPoint: CGPointMake(20.9, 21.9) controlPoint1: CGPointMake(27.56, 19.37) controlPoint2: CGPointMake(23.44, 19.37)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(41.5, 21.5)];
        [bezierPath addLineToPoint: CGPointMake(41.5, 32.5)];
        [bezierPath addCurveToPoint: CGPointMake(38.5, 35.5) controlPoint1: CGPointMake(41.5, 34.16) controlPoint2: CGPointMake(40.16, 35.5)];
        [bezierPath addLineToPoint: CGPointMake(12.5, 35.5)];
        [bezierPath addCurveToPoint: CGPointMake(9.5, 32.5) controlPoint1: CGPointMake(10.84, 35.5) controlPoint2: CGPointMake(9.5, 34.16)];
        [bezierPath addLineToPoint: CGPointMake(9.5, 21.5)];
        [bezierPath addCurveToPoint: CGPointMake(12.5, 18.5) controlPoint1: CGPointMake(9.5, 19.84) controlPoint2: CGPointMake(10.84, 18.5)];
        [bezierPath addLineToPoint: CGPointMake(38.5, 18.5)];
        [bezierPath addCurveToPoint: CGPointMake(41.5, 21.5) controlPoint1: CGPointMake(40.16, 18.5) controlPoint2: CGPointMake(41.5, 19.84)];
        [bezierPath closePath];
        [color setFill];
        [bezierPath fill];
        [color setStroke];
        bezierPath.lineWidth = 1;
        [bezierPath stroke];


        //// Oval Drawing
        UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(21.5, 22.5, 8, 8)];
        [color setFill];
        [ovalPath fill];
    }
}

+ (void)drawInfo;
{
    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];

    //// Group
    {
        //// Oval Drawing
        UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(13, 12, 24.5, 24.5)];
        [color setStroke];
        ovalPath.lineWidth = 5;
        [ovalPath stroke];


        //// Text Drawing
        CGRect textRect = CGRectMake(16, 14, 18, 24);
        [UIColor.blackColor setFill];
        [@"i" drawInRect: textRect withFont: [UIFont fontWithName: @"Georgia-Italic" size: UIFont.buttonFontSize] lineBreakMode: UILineBreakModeWordWrap alignment: UITextAlignmentCenter];
    }
}

+ (void)drawCanvas1;
{
}

#pragma mark Generated Images

+ (UIImage*)imageOfPeople;
{
    if (_imageOfPeople)
        return _imageOfPeople;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(50, 50), NO, 0.0f);
    [YZIconKit drawPeople];
    _imageOfPeople = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfPeople;
}

+ (UIImage*)imageOfCamera;
{
    if (_imageOfCamera)
        return _imageOfCamera;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(50, 50), NO, 0.0f);
    [YZIconKit drawCamera];
    _imageOfCamera = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfCamera;
}

+ (UIImage*)imageOfInfo;
{
    if (_imageOfInfo)
        return _imageOfInfo;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(50, 50), NO, 0.0f);
    [YZIconKit drawInfo];
    _imageOfInfo = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfInfo;
}

#pragma mark Customization Infrastructure

- (void)setPeopleTargets: (NSArray*)peopleTargets
{
    _peopleTargets = peopleTargets;

    for (id target in self.peopleTargets)
        [target setImage: YZIconKit.imageOfPeople];
}

- (void)setCameraTargets: (NSArray*)cameraTargets
{
    _cameraTargets = cameraTargets;

    for (id target in self.cameraTargets)
        [target setImage: YZIconKit.imageOfCamera];
}

- (void)setInfoTargets: (NSArray*)infoTargets
{
    _infoTargets = infoTargets;

    for (id target in self.infoTargets)
        [target setImage: YZIconKit.imageOfInfo];
}


@end
